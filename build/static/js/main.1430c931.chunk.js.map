{"version":3,"sources":["logo.svg","components/Clock.jsx","components/DisplayButton.jsx","components/Timer.jsx","components/Test/Test.jsx","components/Main.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Clock","props","className","style","transform","initialTurn","turn","DisplayButton","clas","text","Timer","useState","setTurn","setInitialTurn","secondsLeft","setsecondsLeft","useEffect","parseInt","seconds","id","setTimeout","clearTimeout","Math","floor","Test","Main","setSeconds","handleClick","val","Container","Navbar","bg","expand","Toggle","aria-controls","Collapse","Nav","Link","onClick","Row","Col","App","opacity","fontSize","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1430c931.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport \"./styles/clock.css\";\r\n\r\nconst Clock = (props) => {\r\n\treturn (\r\n\t\t<div className=\"Base\">\r\n\t\t\t<p className=\"number0 number\">0</p>\r\n\t\t\t<div className=\"number15 number\">\r\n\t\t\t\t<p className=\"test\">15</p>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"number30 number\">\r\n\t\t\t\t<p className=\"test\">30</p>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"number45 number\">\r\n\t\t\t\t<p className=\"test\">45</p>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"centerCircle\"></div>\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"Hand\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\ttransform: `translate(-50%, -100%) rotate(${\r\n\t\t\t\t\t\tprops.initialTurn - props.turn * 0.1\r\n\t\t\t\t\t}deg)`,\r\n\t\t\t\t}}\r\n\t\t\t></div>\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"SecondHand\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\ttransform: `translate(-50%, -100%) rotate(${props.turn * -6}deg)`,\r\n\t\t\t\t}}\r\n\t\t\t></div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Clock;\r\n","import React from \"react\";\r\nimport \"./styles/main.css\";\r\n\r\nconst DisplayButton = ({ clas, text }) => {\r\n\treturn (\r\n\t\t<div className={`button ${clas}`}>\r\n\t\t\t<p>{text}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DisplayButton;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Clock from \"./Clock\";\r\nimport DisplayButton from \"./DisplayButton\";\r\n\r\nconst Timer = (props) => {\r\n\tconst [turn, setTurn] = useState(0);\r\n\tconst [initialTurn, setInitialTurn] = useState(0);\r\n\tconst [secondsLeft, setsecondsLeft] = useState(0);\r\n\t// const [seconds, setseconds] = useState(\"\");\r\n\r\n\tuseEffect(() => {\r\n\t\tsetsecondsLeft(parseInt(props.seconds) * 60);\r\n\t\tsetInitialTurn(parseInt(props.seconds) * 6);\r\n\t\tsetTurn(0);\r\n\t}, [props.seconds]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst id = setTimeout(() => {\r\n\t\t\tif (secondsLeft > 0) {\r\n\t\t\t\tsetsecondsLeft(secondsLeft - 1);\r\n\t\t\t\tsetTurn(turn + 1);\r\n\t\t\t}\r\n\t\t}, 1000);\r\n\t\treturn () => {\r\n\t\t\tclearTimeout(id);\r\n\t\t};\r\n\t});\r\n\r\n\t// const onSubmit = (e) => {\r\n\t// \te.preventDefault();\r\n\t// \tsetsecondsLeft(parseInt(seconds) * 60);\r\n\t// \tsetInitialTurn(parseInt(seconds) * 6);\r\n\t// \tsetseconds(\"\");\r\n\t// \tsetTurn(0);\r\n\t// };\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Clock initialTurn={initialTurn} turn={turn}></Clock>\r\n\r\n\t\t\t<h1>{`${Math.floor(secondsLeft / 60)}   :   ${secondsLeft % 60}`}</h1>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Timer;\r\n","import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Navbar, NavDropdown, Nav } from \"react-bootstrap\";\r\nimport DisplayButton from \"./../DisplayButton\";\r\nimport Timer from \"./../Timer\";\r\n\r\nfunction Test() {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Navbar bg=\"dark\" expand=\"lg\">\r\n\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\r\n\t\t\t\t\t<Nav className=\"mr-auto\">\r\n\t\t\t\t\t\t<Nav.Link href=\"#home\">Home</Nav.Link>\r\n\t\t\t\t\t\t<Nav.Link href=\"#link\">Link</Nav.Link>\r\n\t\t\t\t\t</Nav>\r\n\t\t\t\t</Navbar.Collapse>\r\n\t\t\t</Navbar>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default Test;\r\n","import React, { useState } from \"react\";\r\nimport Timer from \"./Timer\";\r\nimport DisplayButton from \"./DisplayButton\";\r\nimport { Container, Row, Col, Nav, Navbar } from \"react-bootstrap\";\r\nimport Test from \"./Test/Test\";\r\n\r\nconst Main = () => {\r\n\tconst [seconds, setSeconds] = useState(\"0\");\r\n\r\n\tconst handleClick = (val) => {\r\n\t\tsetSeconds(val);\r\n\t};\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Navbar bg=\"transprant\" expand=\"lg\">\r\n\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\r\n\t\t\t\t\t<Nav className=\"d-flex-md justify-content-between w-100\">\r\n\t\t\t\t\t\t<Nav.Link onClick={() => handleClick(25)}>\r\n\t\t\t\t\t\t\t<DisplayButton text=\"Work Time\" clas=\"small\"></DisplayButton>\r\n\t\t\t\t\t\t</Nav.Link>\r\n\r\n\t\t\t\t\t\t<Nav.Link onClick={() => handleClick(5)}>\r\n\t\t\t\t\t\t\t<DisplayButton text=\"Short Break\" clas=\"small\"></DisplayButton>\r\n\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t<Nav.Link onClick={() => handleClick(15)}>\r\n\t\t\t\t\t\t\t<DisplayButton text=\"Long Break\" clas=\"small\"></DisplayButton>\r\n\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t</Nav>\r\n\t\t\t\t</Navbar.Collapse>\r\n\t\t\t</Navbar>\r\n\t\t\t{/* <Row>\r\n\t\t\t\t<Col md={4} }>\r\n\t\t\t\t\t<DisplayButton text=\"Work Time\" class=\"small\"></DisplayButton>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={4} onClick={() => handleClick(5)}>\r\n\t\t\t\t\t<DisplayButton text=\"Short Break\" class=\"small\"></DisplayButton>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={4} onClick={() => handleClick(15)}>\r\n\t\t\t\t\t<DisplayButton text=\"Long Break\" class=\"small\"></DisplayButton>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row> */}\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className=\"d-flex justify-content-center\">\r\n\t\t\t\t\t<Timer seconds={seconds}></Timer>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Timer from \"./components/Timer\";\nimport Main from \"./components/Main\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<Main></Main>\n\t\t\t\t<h3 style={{ opacity: \".4\", fontSize: \"1rem\" }}>\n\t\t\t\t\tDeveloped by Prayag C Bose\n\t\t\t\t</h3>\n\t\t\t</header>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}